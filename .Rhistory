unlist()
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate))
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate)
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
fitler(MaxDate >= '2020-01-01')
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
filter(MaxDate >= '2020-01-01')
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
filter(MaxDate >= '2020-01-01') %>%
unnest(TimeData)
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
filter(MaxDate >= '2020-01-01') %>%
unnest(TimeData) %>%
ggplot(aes(Date, Sales, group = ItemName)) +
geom_line(size = 1)
CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
filter(MaxDate >= '2020-01-01') %>%
unnest(TimeData) %>%
ggplot(aes(Date, Sales, group = ItemName)) +
geom_line(size = 1) +
facet_wrap(~ItemName, scales = 'free_y')
ProcessedData <- CleanData %>%
tsibble::tsibble(key = 'ItemName', index = 'Date') %>%
tsibble::fill_gaps(Sales = 0L) %>%
tibble() %>%
nest(TimeData = c("Date", "Sales")) %>%
mutate(MaxDate = map(.x = TimeData, .f = GetMaxDate)) %>%
unnest(MaxDate) %>%
filter(MaxDate >= '2020-01-01') %>%
unnest(TimeData)
ProcessedData %>%
mutate(Month = floor_date(Date, 'month')) %>%
group_by(Month, ItemName) %>%
summarise(Sales = sum(Sales, na.rm = TRUE)) %>%
ggplot(aes(Date, Sales, group = ItemName)) +
geom_line(size = 1) +
facet_wrap(~ItemName, scales = 'free_y')
ProcessedData %>%
mutate(Month = lubridate::floor_date(Date, 'month')) %>%
group_by(Month, ItemName) %>%
summarise(Sales = sum(Sales, na.rm = TRUE)) %>%
ggplot(aes(Date, Sales, group = ItemName)) +
geom_line(size = 1) +
facet_wrap(~ItemName, scales = 'free_y')
ProcessedData %>%
mutate(Month = lubridate::floor_date(Date, 'month')) %>%
group_by(Month, ItemName) %>%
summarise(Sales = sum(Sales, na.rm = TRUE)) %>%
ggplot(aes(Month, Sales, group = ItemName)) +
geom_line(size = 1) +
facet_wrap(~ItemName, scales = 'free_y')
plotly::ggplotly()
ProcessedData %>%
mutate(Month = lubridate::floor_date(Date, 'month')) %>%
group_by(Month, ItemName) %>%
summarise(Sales = sum(Sales, na.rm = TRUE)) %>%
ggplot(aes(Month, Sales, group = ItemName)) +
geom_line(size = 1) +
facet_wrap(~ItemName, scales = 'free')
plotly::ggplotly()
styler:::style_active_file()
source('C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Dispensers/R/CleanData.R', echo=TRUE)
source('C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Dispensers/R/DispenserEDA.R', echo=TRUE)
data %>%
mutate(
Custname = trimws(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"),
Glpostdt = lubridate::floor_date(Glpostdt, "month")
) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~CustName)
data %>%
mutate(
Custname = trimws(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"),
Glpostdt = lubridate::floor_date(Glpostdt, "month")
) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
plotly::ggplotly()
data %>%
mutate(
Custname = trimws(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"),
Glpostdt = lubridate::floor_date(Glpostdt, "week")
) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
plotly::ggplotly()
data_sum_item <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"),
Glpostdt = lubridate::floor_date(Glpostdt, "week")
)
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_month <- data_cust %>%
mutate(
Glpostdt = lubridate::floor_date(Glpostdt, "month")
)
data_week <- data_cust %>%
mutate(
Glpostdt = lubridate::floor_date(Glpostdt, "week")
)
data_week %>% filter(Custname == 'ALL OTHER' & Glpostdt == '2021-01-03')
data_week %>% filter(Custname == 'ALL OTHER')
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03')
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03' & Itemnmbr == 601325)
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03' & Itemnmbr == '601325')
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03')
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03' & grepl('601325', Itemnmbr))
data_week %>% filter(Custname == 'ALL OTHER' & as.Date(Glpostdt) == '2021-01-03' & grepl('601325', Itemnmbr)) %>% view()
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = str_to_title(CustName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = str_to_title(Custname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust %>% filter(grepl("DI", Custname))
data_cust %>% filter(grepl("di", Custname))
data_cust %>% filter(grepl("DI", Custname, ignore.case = TRUE))
data_cust %>% filter(grepl("Walmart-DI", Custname, ignore.case = TRUE))
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = str_to_title(Custname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust %>% filter(grepl("Walmart-DI", Custname, ignore.case = TRUE))
data_cust$Custname
data_cust %>% filter(grepl("Walmart", Custname, ignore.case = TRUE))
data_cust %>% filter(grepl("Walmart", Custname, ignore.case = TRUE)) %>% select(Custname) %>% distinct()
data_cust %>%  %>% select(Custname) %>% distinct()
data_cust  %>% select(Custname) %>% distinct()
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
# Custname = str_to_title(Custname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust  %>% select(Custname) %>% distinct()
data_cust <- data %>%
mutate(
Custname = trimws(ChainName),
Custname = str_to_title(Custname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust  %>% select(Custnmbr) %>% distinct()
data_cust  %>% select(Custnmbr) %>% distinct() %>% print(n=90)
data_cust <- data %>%
mutate(
across(where(is.character), trimws),
Custname = str_to_title(Chainname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust <- data %>%
mutate(
across(where(is.character), stringr::str_squish),
Custname = str_to_title(Chainname),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust <- data %>%
mutate(
across(where(is.character), stringr::str_squish),
Custname = str_to_title(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
scorecard <- GetMostRecentScorecard()
scorecard %>% filter(Item ==21956002)
scorecard %>% filter(Item ==21956002) %>% view()
data_cust
data_cust %>% select(Custname) %>% distinct()
data_cust <- data %>%
mutate(
across(where(is.character), stringr::str_squish),
Custname = str_to_title(ChainName))
data_cust %>% select(Custname) %>% distinct()
data_cust %>% select(Custname) %>% distinct() %>% print(n=100)
top_customers <- c(
"Walmart",
"Lowes Home Improvement",
"Walmart-Di",
"Homedepot-Prod",
"Wamart-Di-Cad",
"Walmartc",
"Amazon_sf",
"Costco",
"Sams.com",
"Z-9001",
"Z-9000",
"Homedepot.com",
"Bed Bath & Beyond",
"SAMdsv",
"Unknown",
"Target",
"Wayfair",
"Walmart"
)
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
top_customers <- c(
"Walmart",
"Lowes Home Improvement",
"Walmart-Di",
"Homedepot-Prod",
"Wamart-Di-Cad",
"Walmartc",
"Amazon_sf",
"Costco",
"Sams.com",
"Z-9001",
"Z-9000",
"Homedepot.com",
"Bed Bath & Beyond",
"SAMdsv",
"Unknown",
"Target",
"Wayfair",
"Walmart"
)
data_cust <- data %>%
mutate(
across(where(is.character), stringr::str_squish),
Custname = str_to_title(ChainName)),
Custname = if_else(Custname %in% top_customers, Custname, "ALL OTHER"))
data_cust <- data %>%
mutate(
across(where(is.character), stringr::str_squish),
Custname = str_to_title(ChainName),
Custname = if_else(Custname %in% top_customers, Custname, "All Other"))
data_month <- data_cust %>%
mutate(
Glpostdt = lubridate::floor_date(Glpostdt, "month")
)
data_week <- data_cust %>%
mutate(
Glpostdt = lubridate::floor_date(Glpostdt, "week")
)
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
plotly::ggplotly()
data_week %>%
filter(year(Glpostdt) == 2021) %>%
select(Custname,Itemnmbr) %>%
distinct() %>%
group_by(Itemnmbr) %>%
tally()
data_week %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
select(Custname,Itemnmbr) %>%
distinct() %>%
group_by(Itemnmbr) %>%
tally()
data_week %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
select(Custname,Itemnmbr) %>%
distinct() %>%
group_by(Itemnmbr) %>%
tally() %>% arrange(desc(n))
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr == 900179) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr == 601088-C) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr == '601088-C') %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr == '601090 SO-C') %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr == '601148') %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
top_items <- data_week %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE))
top_items
top_items <- data_week %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity))
top_items
top_10_items <- top_items %>%
slice(n=10)
top_``
top_10_items
top_10_items <- top_items %>%
slice(1:10)
top_items <- data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity))
top_10_items <- top_items %>%
slice(1:10)
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y')
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
plotly::ggplotly()
theme_set(theme_minimal())
data_week %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
plotly::ggplotly()
source('C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Dispensers/R/DispenserEDA.R', echo=TRUE)
data_month %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
plotly::ggplotly()
top_items
data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Custname, Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity))
data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Custname, Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity)) %>%
slice_max(n=2, with_ties = F)
data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Custname, Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity)) %>%
slice_max(n=2, with_ties = F, order_by(Quantity))
data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Custname, Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity)) %>%
slice_max(n=2, with_ties = F, order_by= Quantity)
top_items_cust <- data_cust %>%
filter(lubridate::year(Glpostdt) == 2021) %>%
group_by(Custname, Itemnmbr) %>%
summarise(Quantity = sum(Quantity,na.rm = TRUE)) %>%
arrange(desc(Quantity)) %>%
slice_max(n=2, with_ties = F, order_by= Quantity) %>%
mutate(ID = paste0(Custname,Itemnmbr))
data_month %>%
mutate(ID = paste0(Custname,Itemnmbr)) %>%
fitler(ID %in% top_items_cust$ID) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
data_month %>%
mutate(ID = paste0(Custname,Itemnmbr)) %>%
filter(ID %in% top_items_cust$ID) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
data_month
data_month %>%
mutate(ID = paste0(Custname,Itemnmbr)) %>%
filter(ID %in% top_items_cust$ID) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
filter(Itemnmbr %in% top_10_items$Itemnmbr)
data_month %>%
mutate(ID = paste0(Custname,Itemnmbr)) %>%
filter(ID %in% top_items_cust$ID) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
plotly::ggplotly()
current_month <- '2021-03-01'
data_month %>%
mutate(ID = paste0(Custname,Itemnmbr)) %>%
filter(ID %in% top_items_cust$ID & Glpostdt < current_month) %>%
group_by(Custname, Glpostdt, Itemnmbr) %>%
summarise(Quantity = sum(Quantity, na.rm = TRUE)) %>%
ggplot(aes(Glpostdt, Quantity, group = Itemnmbr)) +
scale_y_continuous(labels = scales::comma) +
geom_line() +
facet_wrap(~Custname,scales = 'free_y') +
labs(title = 'Top 10 items by customer')
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "wsnwospare",
Database = "ORA_TRANS", Port = 1433)
tbl(con, 'tbl_Source_Rules')
tbl(con, 'tbl_OrgItem_Attributes')
install.packages(c("forecast", "lava", "magick", "pbkrtest", "pointblank", "RcppArmadillo", "RSQLite", "rvest", "textshaping", "waldo", "workflows", "xfun", "zoo"))
source('C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Dispensers/R/DispenserEDA.R', echo=TRUE)
devtools::install_github("business-science/modeltime.h2o")
source('C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Dispensers/R/DispenserEDA.R', echo=TRUE)
remain_resale_output <- readRDS("C:/Users/mnalley/OneDrive - DS Services of America, Inc/DSS/Forecasting/Twenty20/February/remain_resale_output.RDS")
